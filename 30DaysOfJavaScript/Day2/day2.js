/**
 * Primitive and non-primitive
 * Same as Java, except that string ARE primitive
 * - nums, str, bool, null, undefined and... symbol?
 * Symbol - A unique value that can be generated by 
 * Symbol constructor
 * 
 * - objects, arrays
 */

let word = 'word';

let array = ['word1', 'word2', 'word3'];

console.log(array);

// result: Array(3) [ "word1", "word2", "word3" ]

array[0] = 'extraword';

console.log(array);

// result: Array(3) [ "extraword", "word2", "word3" ]

let intarray = [1,2,3];

let intarray2 = [1,2,3];

console.log(intarray == intarray2); 

/** 
 * false. Can't compare non-primitive, even if they have
 * the same values
 */

/**
 * Math.class, it's identical to Java. 
 */

console.log(Math.PI); //Constant PI
console.log(Math.round(9.23)); // 9
console.log(Math.floor(Math.PI)); //round up, 3
console.log(Math.ceil(Math.PI)); //round down, 4
console.log(Math.min(1, 2, 3, 4, 5)); // 1
console.log(Math.max(1, 2, 3, 4, 5)); // 5 

console.log(Math.random()); //between 0 and 0.99
console.log(Math.floor(Math.random() * 11)); // between 0 - 10
console.log(Math.ceil(Math.random() * 11)); // between 1 - 11

console.log(Math.pow(3,2)); // 9

console.log(Math.log(4)); // Logarithm with base E

console.log(Math.LN2); // Constants
console.log(Math.LN10); 

// trigonometry, sin and cos   

console.log(Math.sin(90));
console.log(Math.cos(0));

// To use a looooong string in separate lines, use \ to separate them.

const paragraph = "My name is Asabeneh Yetayeh. I live in Finland, Helsinki.\
I am a teacher and I love teaching. I teach HTML, CSS, JavaScript, React, Redux, \
Node.js, Python, Data Analysis and D3.js for anyone who is interested to learn. \
In the end of 2019, I was thinking to expand my teaching and to reach \
to global audience and I started a Python challenge from November 20 - December 19.\
It was one of the most rewarding and inspiring experience.\
Now, we are in 2020. I am enjoying preparing the 30DaysOfJavaScript challenge and \
I hope you are enjoying too."

console.log(paragraph);

/**
 * Escape sequences
 * \n next line
 * \t tab
 * \\ backslash
 * \' single quote
 * \" double quote
 */

//Template literals?

let a = 'stringA'
let b = 'stringB'

// Need to use ` to ${}, similar to bash and String.format 
// from Java
console.log(`The value of ${a} and ${b}`);

let num1 = 2;
let num2 = 3;

// That's interesting
console.log(`${num1} is greater than ${num2}: ${a > b}`);

let str = 'string';

console.log(str.length); // Same as Java

let str1letter = str[0];

console.log(str1letter); // s

console.log(str.toUpperCase());

// Lazy to write, same as Java
console.log(str.toUpperCase().toLowerCase());

// substr() is deprecated, I think

// 2 args: 1st gets the letter at pos x but 2nd doesnt,
// it gets the one behind, so (0, 3) != stri
console.log(str.substring(0,3)); // str 
// 1 arg: shows the letter at pos x and the rest of the string
console.log(str.substring(2)); // ring

let string1 = "Replace text"

console.log(string1.replace("Replace","Day 2")); // Day 2 text

let char = string1.charAt(0); // Same as string1[0]
console.log(char);
console.log(typeof char == typeof string1); // So here chars are the same as strings

console.log(string1.charCodeAt(0)); // return ASCII code of the char / R = 82

console.log(string1.indexOf("p")); // 2
console.log(string1.indexOf("r")); // -1, not found

console.log(string1.indexOf("t")); // 8
console.log(string1.lastIndexOf("t")); // returns index of last match of substring

console.log(string1.concat("For", "Day 2", "of JavaScript")); //Replace textForDay 2of JavaScript

console.log(string1.startsWith("R")); // t
console.log(string1.startsWith("r")); // f

console.log(string1.endsWith('text')); // t

// search with a substring, that's interesting

console.log(string1.search("place")); // 2, returns pos of first letter

console.log(string1.match("t")); // returns an array

console.log(string1.match(/t/gi)) // g - search in whole string / i - ignore case / returns an array with 2 "t"

// Example with numbers from 30DaysOfJavaScript

let txt = 'In 2019, I ran 30 Days of Python. Now, in 2020 I am super exited to start this challenge';
let regEx = /\d+/;

console.log(txt.match(regEx)); // returns [2019]
console.log(txt.match(/\d+/g)); // returns [ "2019", "30", "2020" ]

console.log("test".repeat(5)); // returns the string repeated x times

/**
 * Casting/Parsing methods
 * parseX() x means Int, Float
 * Number()
 * +string
 */

let testNum = '50'
let str2num = parseInt(testNum);
let str3num = Number(testNum);
let str4num = +testNum;

console.log(`test1 = ${str2num} / ${typeof str2num}, test2 = ${str3num} / ${typeof str3num}, test3 = ${str4num} / ${typeof str4num}`);

let testFloat = '19.99' // idk if there's Locale in JS
str2num = parseFloat(testFloat);
str3num = Number(testFloat);
str4num = +testFloat;

console.log(`test1 = ${str2num} / ${typeof str2num}, test2 = ${str3num} / ${typeof str3num}, test3 = ${str4num} / ${typeof str4num}`);

// Parsing float to int
console.log(parseInt(testFloat));


// Exercises (part 1)

// 1) Declare a variable named challenge and assign it to an initial value '30 Days Of JavaScript'.
let challenge = '30 Days of JavaScript';
// 2) Print the string on the browser console using console.log()
console.log(challenge);
// 3) Print the length of the string on the browser console using console.log()
console.log(challenge.length);
// 4) Change all the string characters to capital letters using toUpperCase() method
console.log(challenge.toUpperCase());
// 5) Change all the string characters to lowercase letters using toLowerCase() method
console.log(challenge.toLowerCase());
// 6) Cut (slice) out the first word of the string using substr() or substring() method
console.log(challenge.substring(3,7));
// 7) Slice out the phrase Days Of JavaScript from 30 Days Of JavaScript.
console.log(challenge.substring(3));
// 8) Check if the string contains a word Script using includes() method
console.log(challenge.includes('Script'));
// 9) Split the string into an array using split() method
console.log(challenge.split());
// 10) Split the string 30 Days Of JavaScript at the space using split() method
console.log(challenge.split(" "));
// 11) 'Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon' split the string at the comma and change it to an array.
console.log('Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon'.split(","));
// 12) Change 30 Days Of JavaScript to 30 Days Of Python using replace() method.
console.log(challenge.replace("JavaScript", "Python"));
// 13) What is character at index 15 in '30 Days Of JavaScript' string? Use charAt() method.
console.log(challenge.charAt(15));
// 14) What is the character code of J in '30 Days Of JavaScript' string using charCodeAt()
console.log(challenge.charCodeAt(11));
// 15) Use indexOf to determine the position of the first occurrence of a in 30 Days Of JavaScript
console.log(challenge.indexOf('a'));
// 16) Use lastIndexOf to determine the position of the last occurrence of a in 30 Days Of JavaScript.
console.log(challenge.lastIndexOf('a'));
// 17) Use indexOf to find the position of the first occurrence of the word because in the following sentence:'You cannot end a sentence with because because because is a conjunction
console.log('You cannot end a sentence with because because because is a conjunction'.indexOf('because'));
// 18) Use lastIndexOf to find the position of the last occurrence of the word because in the following sentence:'You cannot end a sentence with because because because is a conjunction'
console.log('You cannot end a sentence with because because because is a conjunction'.lastIndexOf('because'));
// 19) Use search to find the position of the first occurrence of the word because in the following sentence:'You cannot end a sentence with because because because is a conjunction'
console.log('You cannot end a sentence with because because because is a conjunction'.search('because'));
// 20) Use trim() to remove any trailing whitespace at the beginning and the end of a string.E.g ' 30 Days Of JavaScript '
console.log(' 30 Days Of JavaScript '.trim());
// 21) Use startsWith() method with the string 30 Days Of JavaScript and make the result true
console.log(challenge.startsWith('3'));
// 22) Use endsWith() method with the string 30 Days Of JavaScript and make the result true
console.log(challenge.endsWith('t'));
// 23) Use match() method to find all the aâ€™s in 30 Days Of JavaScript
console.log(challenge.match(/a/g));
// 24) Use concat() and merge '30 Days of' and 'JavaScript' to a single string, '30 Days Of JavaScript'
console.log('30 Days of '.concat('JavaScript'));
// 25) Use repeat() method to print 30 Days Of JavaScript 2 times
console.log(challenge.repeat(2));

// part 2
// 1) Using console.log() print out the following statement:
console.log('The quote \'There is no exercise better for the heart than reaching down and lifting people up.\' by John Holmes teaches us to \help\ one another.');
// 2) Using console.log() print out the following quote by Mother Teresa:
console.log('\"Love is not patronizing and charity isn\'t about pity, it is about love. Charity and love are the same -- with charity you give love, so don\'t just give money but reach out your hand instead.\"');
// 3) Check if typeof '10' is exactly equal to 10. If not make it exactly equal.
console.log(typeof '10' == typeof 10);
console.log(typeof +'10' == typeof 10);
// 4) Check if parseFloat('9.8') is equal to 10 if not make it exactly equal with 10.
console.log(parseFloat('9.8') == 10);
console.log(parseInt(parseFloat('9.8')) + 1 == 10);
// 5) Check if 'on' is found in both python and jargon
console.log('python'.includes('on'));
console.log('jargon'.includes('on'));
// 6) I hope this course is not full of jargon. Check if jargon is in the sentence.
console.log('I hope this course is not full of jargon'.match('jargon'));
// 7) Generate a random number between 0 and 100 inclusively.
console.log(Math.floor(Math.random() * 101));
// 8) Generate a random number between 50 and 100 inclusively.
console.log(Math.floor(Math.random() * 51 + 50));
// 9) Generate a random number between 0 and 255 inclusively.
console.log(Math.floor(Math.random() * 256));
// 10) Access the 'JavaScript' string characters using a random number.
let js = 'JavaScript'
console.log(js.charAt(Math.floor(Math.random() * (js.length - 1))));
// 11) Use console.log() and escape characters to print the following pattern.
console.log('1\t1\t1\t1\t1\n \
             2\t1\t2\t4\t8\n \
             3\t1\t3\t9\t27\n \
             4\t1\t4\t16\t64\n \
             5\t1\t5\t25\t125');
// 12) Use substr to slice out the phrase because because because from the following sentence:'You cannot end a sentence with because because because is a conjunction'
console.log('You cannot end a sentence with because because because is a conjunction'.substr(30,24)); // substr(string start pos, length from there / counts [0] too);

// Part 3
// 1) 'Love is the best thing in this world. Some found their love and some are still looking for their love.' Count the number of word love in this sentence.
console.log('Love is the best thing in this world. Some found their love and some are still looking for their love.'.match('love')[0].length);
// 2) Use match() to count the number of all because in the following sentence:'You cannot end a sentence with because because because is a conjunction'
console.log('You cannot end a sentence with because because because is a conjunction'.match(/because/g).length);
// 3) Clean the following text and find the most frequent word (hint, use replace and regular expressions).
const sentence = '%I $am@% a %tea@cher%, &and& I lo%#ve %te@a@ching%;. The@re $is no@th@ing; &as& mo@re rewarding as educa@ting &and& @emp%o@weri@ng peo@ple. ;I found tea@ching m%o@re interesting tha@n any ot#her %jo@bs. %Do@es thi%s mo@tiv#ate yo@u to be a tea@cher!? %Th#is 30#Days&OfJavaScript &is al@so $the $resu@lt of &love& of tea&ching'
console.log(sentence.replace(/[%@&#;$!]/g, ""));
// Do I need to find the word with JS or just replace the characters and find it?
// I guess it's "I"
// 4) Calculate the total annual income of the person by extracting the numbers from the following text. 'He earns 5000 euro from salary per month, 10000 euro annual bonus, 15000 euro online courses per month.'
let sentence2 = 'He earns 5000 euro from salary per month, 10000 euro annual bonus, 15000 euro online courses per month.';
let words = sentence2.split(" ");
let salary1 = parseInt(words[2]);
let salary2 = parseInt(words[8]);
let salary3 = parseInt(words[12]);

console.log(salary1 * 12 + salary2 + salary3 * 12); // 250000


